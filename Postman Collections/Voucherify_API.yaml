swagger: '2.0'
info:
  version: '1.0'
  title: Voucherify API
  description: 'TODO: Add Description'
  license:
    name: MIT
    url: http://github.com/gruntjs/grunt/blob/master/LICENSE-MIT
host: 'https:'
basePath: //api.voucherify.io/v1
schemes:
- http
consumes:
- application/json
produces:
- application/json
paths:
  /v1/campaigns:
    post:
      description: ''
      summary: TC6 - Create campaign
      tags:
      - TC6 - Campaign with Validation Rules
      operationId: V1CampaignsPost3
      produces:
      - application/json
      parameters:
      - name: Body
        in: body
        required: true
        description: ''
        schema:
          $ref: '#/definitions/Tc6  create campaignrequest'
      - name: X-App-Id
        in: header
        required: true
        type: string
        description: ''
      - name: X-App-Token
        in: header
        required: true
        type: string
        description: ''
      - name: Content-Type
        in: header
        required: true
        type: string
        description: ''
      responses:
        200:
          description: ''
      security: []
      x-unitTests:
      - request:
          method: POST
          uri: /v1/campaigns
          headers:
            Content-Type: application/json
            X-App-Id: c70a6f00-cf91-4756-9df5-47628850002b
            X-App-Token: 3266b9f8-e246-4f79-bdf0-833929b1380c
          body: >-
            {
                "name": "TC6 - test campaign",
                "start_date": "2016-09-26T00:00:00Z",
                "expiration_date": "2020-12-26T00:00:00Z",
                "type": "AUTO_UPDATE",
                "vouchers_count": 10,
                "voucher": {
                    "type": "DISCOUNT_VOUCHER",
                    "discount": {
                        "percent_off": "10.0",
                        "type": "PERCENT"
                    },
                    "redemption": {
                      "quantity": 1
                    },
                    "code_config": {
                        "pattern": "TC6-PROMO-#######"
                    }
                },
                "metadata": {
                  "test": true
                }
            }
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: NONE
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          headers: {}
        x-testShouldPass: true
        x-testEnabled: true
        x-testName: TC6 - Create campaign
        x-testDescription: ''
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /v1/campaigns/test campaign:
    get:
      description: ''
      summary: Get campaign
      tags:
      - Campaigns
      operationId: V1CampaignsTestCampaignGet
      produces:
      - application/json
      parameters:
      - name: X-App-Id
        in: header
        required: true
        type: string
        description: ''
      - name: X-App-Token
        in: header
        required: true
        type: string
        description: ''
      - name: Content-Type
        in: header
        required: true
        type: string
        description: ''
      responses:
        200:
          description: ''
      security: []
      x-unitTests:
      - request:
          method: GET
          uri: /v1/campaigns/test campaign
          headers:
            X-App-Id: c70a6f00-cf91-4756-9df5-47628850002b
            X-App-Token: 3266b9f8-e246-4f79-bdf0-833929b1380c
            Content-Type: application/json
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: NONE
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          headers: {}
        x-testShouldPass: true
        x-testEnabled: true
        x-testName: Get campaign
        x-testDescription: ''
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /v1/customers:
    post:
      description: ''
      summary: Create
      tags:
      - Customers
      operationId: V1CustomersPost2
      produces:
      - application/json
      parameters:
      - name: Body
        in: body
        required: true
        description: ''
        schema:
          $ref: '#/definitions/CreateRequest'
      - name: X-App-Id
        in: header
        required: true
        type: string
        description: ''
      - name: X-App-Token
        in: header
        required: true
        type: string
        description: ''
      - name: Content-Type
        in: header
        required: true
        type: string
        description: ''
      responses:
        200:
          description: ''
      security: []
      x-unitTests:
      - request:
          method: POST
          uri: /v1/customers
          headers:
            Content-Type: application/json
            X-App-Id: c70a6f00-cf91-4756-9df5-47628850002b
            X-App-Token: 3266b9f8-e246-4f79-bdf0-833929b1380c
          body: >-
            {
                "name" : "Jan Kowalski",
                "email" : "jan1516274639@kowalski.pl"
            }
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: NONE
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          headers: {}
        x-testShouldPass: true
        x-testEnabled: true
        x-testName: Create
        x-testDescription: ''
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /v1/customers/{customerId}:
    get:
      description: ''
      summary: Get
      tags:
      - Customers
      operationId: V1CustomersByCustomerIdGet
      produces:
      - application/json
      parameters:
      - name: X-App-Id
        in: header
        required: true
        type: string
        description: ''
      - name: X-App-Token
        in: header
        required: true
        type: string
        description: ''
      - name: Content-Type
        in: header
        required: true
        type: string
        description: ''
      - name: customerId
        in: path
        required: true
        type: string
        description: ''
      responses:
        200:
          description: ''
      security: []
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
    put:
      description: ''
      summary: Update
      tags:
      - Customers
      operationId: V1CustomersByCustomerIdPut
      produces:
      - application/json
      parameters:
      - name: Body
        in: body
        required: true
        description: ''
        schema:
          $ref: '#/definitions/UpdateRequest'
      - name: X-App-Id
        in: header
        required: true
        type: string
        description: ''
      - name: X-App-Token
        in: header
        required: true
        type: string
        description: ''
      - name: Content-Type
        in: header
        required: true
        type: string
        description: ''
      - name: customerId
        in: path
        required: true
        type: string
        description: ''
      responses:
        200:
          description: ''
      security: []
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /v1/customers/{createdCustomerId}:
    delete:
      description: ''
      summary: Delete
      tags:
      - Customers
      operationId: V1CustomersByCreatedCustomerIdDelete
      produces:
      - application/json
      parameters:
      - name: Body
        in: body
        required: true
        description: ''
        schema:
          $ref: '#/definitions/DeleteRequest'
      - name: X-App-Id
        in: header
        required: true
        type: string
        description: ''
      - name: X-App-Token
        in: header
        required: true
        type: string
        description: ''
      - name: Content-Type
        in: header
        required: true
        type: string
        description: ''
      - name: createdCustomerId
        in: path
        required: true
        type: string
        description: ''
      responses:
        200:
          description: ''
      security: []
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /v1/vouchers/test-activity/enable:
    post:
      description: ''
      summary: Enable
      tags:
      - Enable/disable
      operationId: V1VouchersTestActivityEnablePost
      produces:
      - application/json
      parameters:
      - name: X-App-Id
        in: header
        required: true
        type: string
        description: ''
      - name: X-App-Token
        in: header
        required: true
        type: string
        description: ''
      - name: Content-Type
        in: header
        required: true
        type: string
        description: ''
      responses:
        200:
          description: ''
      security: []
      x-unitTests:
      - request:
          method: POST
          uri: /v1/vouchers/test-activity/enable
          headers:
            X-App-Id: c70a6f00-cf91-4756-9df5-47628850002b
            X-App-Token: 3266b9f8-e246-4f79-bdf0-833929b1380c
            Content-Type: application/json
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: NONE
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          headers: {}
        x-testShouldPass: true
        x-testEnabled: true
        x-testName: Enable
        x-testDescription: ''
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /v1/vouchers/test-activity/disable:
    post:
      description: ''
      summary: Disable
      tags:
      - Enable/disable
      operationId: V1VouchersTestActivityDisablePost
      produces:
      - application/json
      parameters:
      - name: Body
        in: body
        required: true
        description: ''
        schema:
          $ref: '#/definitions/DisableRequest'
      - name: X-App-Id
        in: header
        required: true
        type: string
        description: ''
      - name: X-App-Token
        in: header
        required: true
        type: string
        description: ''
      - name: Content-Type
        in: header
        required: true
        type: string
        description: ''
      responses:
        200:
          description: ''
      security: []
      x-unitTests:
      - request:
          method: POST
          uri: /v1/vouchers/test-activity/disable
          headers:
            Content-Type: application/json
            X-App-Id: c70a6f00-cf91-4756-9df5-47628850002b
            X-App-Token: 3266b9f8-e246-4f79-bdf0-833929b1380c
          body: >-
            {
                "campaign": "100k-test",
                "channel": "MailChimp"
            }
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: NONE
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          headers: {}
        x-testShouldPass: true
        x-testEnabled: true
        x-testName: Disable
        x-testDescription: ''
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /v1/exports:
    post:
      description: ''
      summary: Create Export
      tags:
      - Export
      operationId: V1ExportsPost
      produces:
      - application/json
      parameters:
      - name: Body
        in: body
        required: true
        description: ''
        schema:
          $ref: '#/definitions/CreateExportrequest'
      - name: X-App-Id
        in: header
        required: true
        type: string
        description: ''
      - name: X-App-Token
        in: header
        required: true
        type: string
        description: ''
      - name: Content-Type
        in: header
        required: true
        type: string
        description: ''
      responses:
        200:
          description: ''
      security: []
      x-unitTests:
      - request:
          method: POST
          uri: /v1/exports
          headers:
            Content-Type: application/json
            X-App-Id: c70a6f00-cf91-4756-9df5-47628850002b
            X-App-Token: 3266b9f8-e246-4f79-bdf0-833929b1380c
          body: >-
            {
                "exported_object": "voucher",
              "parameters" : {
                "fields": ["code", "voucher_type"],
                "filter" : {
                  "categories" : {
                    "conditions" : {
                      "$in" : ["postman"]
                    }
                  }
                }
              }
            }
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: NONE
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          headers: {}
        x-testShouldPass: true
        x-testEnabled: true
        x-testName: Create Export
        x-testDescription: ''
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /v1/exports/{exportId}:
    get:
      description: ''
      summary: Get Export
      tags:
      - Export
      operationId: V1ExportsByExportIdGet
      produces:
      - application/json
      parameters:
      - name: X-App-Id
        in: header
        required: true
        type: string
        description: ''
      - name: X-App-Token
        in: header
        required: true
        type: string
        description: ''
      - name: Content-Type
        in: header
        required: true
        type: string
        description: ''
      - name: exportId
        in: path
        required: true
        type: string
        description: ''
      responses:
        200:
          description: ''
      security: []
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
    delete:
      description: ''
      summary: Delete Export
      tags:
      - Export
      operationId: V1ExportsByExportIdDelete
      produces:
      - application/json
      parameters:
      - name: X-App-Id
        in: header
        required: true
        type: string
        description: ''
      - name: X-App-Token
        in: header
        required: true
        type: string
        description: ''
      - name: Content-Type
        in: header
        required: true
        type: string
        description: ''
      - name: exportId
        in: path
        required: true
        type: string
        description: ''
      responses:
        200:
          description: ''
      security: []
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /v1/vouchers/import:
    get:
      description: ''
      summary: Import vouchers
      tags:
      - Import
      operationId: V1VouchersImportGet
      produces:
      - application/json
      parameters:
      - name: X-App-Id
        in: header
        required: true
        type: string
        description: ''
      - name: X-App-Token
        in: header
        required: true
        type: string
        description: ''
      - name: Content-Type
        in: header
        required: true
        type: string
        description: ''
      responses:
        200:
          description: ''
      security: []
      x-unitTests:
      - request:
          method: GET
          uri: /v1/vouchers/import
          headers:
            X-App-Id: c70a6f00-cf91-4756-9df5-47628850002b
            X-App-Token: 3266b9f8-e246-4f79-bdf0-833929b1380c
            Content-Type: application/json
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: NONE
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          headers: {}
        x-testShouldPass: true
        x-testEnabled: true
        x-testName: Import vouchers
        x-testDescription: ''
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
    post:
      description: ''
      summary: Import vouchers - duplicate
      tags:
      - Import
      operationId: V1VouchersImportPost
      produces:
      - application/json
      parameters:
      - name: Body
        in: body
        required: true
        description: ''
        schema:
          type: array
          items:
            $ref: '#/definitions/Import vouchers  duplicaterequest'
      - name: X-App-Id
        in: header
        required: true
        type: string
        description: ''
      - name: X-App-Token
        in: header
        required: true
        type: string
        description: ''
      - name: Content-Type
        in: header
        required: true
        type: string
        description: ''
      responses:
        200:
          description: ''
      security: []
      x-unitTests:
      - request:
          method: POST
          uri: /v1/vouchers/import
          headers:
            Content-Type: application/json
            X-App-Id: c70a6f00-cf91-4756-9df5-47628850002b
            X-App-Token: 3266b9f8-e246-4f79-bdf0-833929b1380c
          body: >-
            [
                {
                    "code": "test",
                    "category": "postman",
                    "type": "DISCOUNT_VOUCHER",
                    "discount": {
                        "amount_off": 3000,
                        "type": "AMOUNT"
                    },
                    "start_date": "2015-12-01T23:00:00Z",
                    "expiration_date": "2015-12-19T23:00:00Z",
                    "redemption": {
                        "quantity": 1.0
                    },
                    "metadata": {"unit": "EUR"},
                    "additional_info": "secret-code1"
                }
            ]
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: NONE
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          headers: {}
        x-testShouldPass: true
        x-testEnabled: true
        x-testName: Import vouchers - duplicate
        x-testDescription: ''
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /v1/campaigns/postman-import/import:
    post:
      description: ''
      summary: Import vouchers - to campaign
      tags:
      - Import
      operationId: V1CampaignsPostmanImportImportPost
      produces:
      - application/json
      parameters:
      - name: Body
        in: body
        required: true
        description: ''
        schema:
          type: array
          items:
            $ref: '#/definitions/Import vouchers  to campaignrequest'
      - name: X-App-Id
        in: header
        required: true
        type: string
        description: ''
      - name: X-App-Token
        in: header
        required: true
        type: string
        description: ''
      - name: Content-Type
        in: header
        required: true
        type: string
        description: ''
      responses:
        200:
          description: ''
      security: []
      x-unitTests:
      - request:
          method: POST
          uri: /v1/campaigns/postman-import/import
          headers:
            Content-Type: application/json
            X-App-Id: c70a6f00-cf91-4756-9df5-47628850002b
            X-App-Token: 3266b9f8-e246-4f79-bdf0-833929b1380c
          body: >-
            [
                {
                    "code": "CODE_1516274639",
                    "redemption": {
                        "quantity": 1.0
                    },
                    "metadata": {"unit": "EUR"},
                    "additional_info": "secret-code1"
                }
            ]
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: NONE
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          headers: {}
        x-testShouldPass: true
        x-testEnabled: true
        x-testName: Import vouchers - to campaign
        x-testDescription: ''
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /v1/products:
    get:
      description: ''
      summary: List products
      tags:
      - Products
      operationId: V1ProductsGet
      produces:
      - application/json
      parameters:
      - name: X-App-Id
        in: header
        required: true
        type: string
        description: ''
      - name: X-App-Token
        in: header
        required: true
        type: string
        description: ''
      - name: Content-Type
        in: header
        required: true
        type: string
        description: ''
      responses:
        200:
          description: ''
      security: []
      x-unitTests:
      - request:
          method: GET
          uri: /v1/products
          headers:
            X-App-Id: c70a6f00-cf91-4756-9df5-47628850002b
            X-App-Token: 3266b9f8-e246-4f79-bdf0-833929b1380c
            Content-Type: application/json
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: NONE
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          headers: {}
        x-testShouldPass: true
        x-testEnabled: true
        x-testName: List products
        x-testDescription: ''
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
    post:
      description: ''
      summary: TC6 - Create Product
      tags:
      - TC6 - Campaign with Validation Rules
      operationId: V1ProductsPost2
      produces:
      - application/json
      parameters:
      - name: Body
        in: body
        required: true
        description: ''
        schema:
          $ref: '#/definitions/Tc6  create productrequest'
      - name: X-App-Id
        in: header
        required: true
        type: string
        description: ''
      - name: X-App-Token
        in: header
        required: true
        type: string
        description: ''
      - name: Content-Type
        in: header
        required: true
        type: string
        description: ''
      responses:
        200:
          description: ''
      security: []
      x-unitTests:
      - request:
          method: POST
          uri: /v1/products
          headers:
            Content-Type: application/json
            X-App-Id: c70a6f00-cf91-4756-9df5-47628850002b
            X-App-Token: 3266b9f8-e246-4f79-bdf0-833929b1380c
          body: >-
            {
                "name" : "Apple iPhone 7",
                "source_id" : "internal_crm_id_1516274639",
                "attributes": [ "color", "memory" ],
                "metadata": {
                  "test": true
                }
            }
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: NONE
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          headers: {}
        x-testShouldPass: true
        x-testEnabled: true
        x-testName: TC6 - Create Product
        x-testDescription: ''
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /v1/products/{createdProductId}:
    get:
      description: ''
      summary: Get product
      tags:
      - Products
      operationId: V1ProductsByCreatedProductIdGet
      produces:
      - application/json
      parameters:
      - name: X-App-Id
        in: header
        required: true
        type: string
        description: ''
      - name: X-App-Token
        in: header
        required: true
        type: string
        description: ''
      - name: Content-Type
        in: header
        required: true
        type: string
        description: ''
      - name: createdProductId
        in: path
        required: true
        type: string
        description: ''
      responses:
        200:
          description: ''
      security: []
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
    put:
      description: ''
      summary: Update product
      tags:
      - Products
      operationId: V1ProductsByCreatedProductIdPut
      produces:
      - application/json
      parameters:
      - name: Body
        in: body
        required: true
        description: ''
        schema:
          $ref: '#/definitions/UpdateProductrequest'
      - name: X-App-Id
        in: header
        required: true
        type: string
        description: ''
      - name: X-App-Token
        in: header
        required: true
        type: string
        description: ''
      - name: Content-Type
        in: header
        required: true
        type: string
        description: ''
      - name: createdProductId
        in: path
        required: true
        type: string
        description: ''
      responses:
        200:
          description: ''
      security: []
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
    delete:
      description: ''
      summary: Delete product
      tags:
      - Products
      operationId: V1ProductsByCreatedProductIdDelete
      produces:
      - application/json
      parameters:
      - name: Body
        in: body
        required: true
        description: ''
        schema:
          type: object
      - name: X-App-Id
        in: header
        required: true
        type: string
        description: ''
      - name: X-App-Token
        in: header
        required: true
        type: string
        description: ''
      - name: Content-Type
        in: header
        required: true
        type: string
        description: ''
      - name: createdProductId
        in: path
        required: true
        type: string
        description: ''
      responses:
        200:
          description: ''
      security: []
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /v1/products/{createdProductId}/skus:
    get:
      description: ''
      summary: List SKUs
      tags:
      - Products
      operationId: V1ProductsSkusByCreatedProductIdGet
      produces:
      - application/json
      parameters:
      - name: X-App-Id
        in: header
        required: true
        type: string
        description: ''
      - name: X-App-Token
        in: header
        required: true
        type: string
        description: ''
      - name: Content-Type
        in: header
        required: true
        type: string
        description: ''
      - name: createdProductId
        in: path
        required: true
        type: string
        description: ''
      responses:
        200:
          description: ''
      security: []
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
    post:
      description: ''
      summary: TC6 - Add SKU
      tags:
      - TC6 - Campaign with Validation Rules
      operationId: V1ProductsSkusByCreatedProductIdPost2
      produces:
      - application/json
      parameters:
      - name: Body
        in: body
        required: true
        description: ''
        schema:
          $ref: '#/definitions/Tc6  add skurequest'
      - name: X-App-Id
        in: header
        required: true
        type: string
        description: ''
      - name: X-App-Token
        in: header
        required: true
        type: string
        description: ''
      - name: Content-Type
        in: header
        required: true
        type: string
        description: ''
      - name: createdProductId
        in: path
        required: true
        type: string
        description: ''
      responses:
        200:
          description: ''
      security: []
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /v1/products/{createdProductId}/skus/{createdSKUId}:
    get:
      description: ''
      summary: Get SKU
      tags:
      - Products
      operationId: V1ProductsSkusByCreatedProductIdAndCreatedSKUIdGet
      produces:
      - application/json
      parameters:
      - name: X-App-Id
        in: header
        required: true
        type: string
        description: ''
      - name: X-App-Token
        in: header
        required: true
        type: string
        description: ''
      - name: Content-Type
        in: header
        required: true
        type: string
        description: ''
      - name: createdProductId
        in: path
        required: true
        type: string
        description: ''
      - name: createdSKUId
        in: path
        required: true
        type: string
        description: ''
      responses:
        200:
          description: ''
      security: []
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
    put:
      description: ''
      summary: Update SKU
      tags:
      - Products
      operationId: V1ProductsSkusByCreatedProductIdAndCreatedSKUIdPut
      produces:
      - application/json
      parameters:
      - name: Body
        in: body
        required: true
        description: ''
        schema:
          $ref: '#/definitions/UpdateSkurequest'
      - name: X-App-Id
        in: header
        required: true
        type: string
        description: ''
      - name: X-App-Token
        in: header
        required: true
        type: string
        description: ''
      - name: Content-Type
        in: header
        required: true
        type: string
        description: ''
      - name: createdProductId
        in: path
        required: true
        type: string
        description: ''
      - name: createdSKUId
        in: path
        required: true
        type: string
        description: ''
      responses:
        200:
          description: ''
      security: []
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
    delete:
      description: ''
      summary: Delete SKU
      tags:
      - Products
      operationId: V1ProductsSkusByCreatedProductIdAndCreatedSKUIdDelete
      produces:
      - application/json
      parameters:
      - name: X-App-Id
        in: header
        required: true
        type: string
        description: ''
      - name: X-App-Token
        in: header
        required: true
        type: string
        description: ''
      - name: Content-Type
        in: header
        required: true
        type: string
        description: ''
      - name: createdProductId
        in: path
        required: true
        type: string
        description: ''
      - name: createdSKUId
        in: path
        required: true
        type: string
        description: ''
      responses:
        200:
          description: ''
      security: []
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /v1/vouchers/publish:
    post:
      description: ''
      summary: TC4 - Publish voucher form auto-update campaign
      tags:
      - TC4 - Distribution
      operationId: V1VouchersPublishPost3
      produces:
      - application/json
      parameters:
      - name: Body
        in: body
        required: true
        description: ''
        schema:
          $ref: '#/definitions/Tc4  publish voucher form autoUpdate campaignrequest'
      - name: X-App-Id
        in: header
        required: true
        type: string
        description: ''
      - name: X-App-Token
        in: header
        required: true
        type: string
        description: ''
      - name: Content-Type
        in: header
        required: true
        type: string
        description: ''
      responses:
        200:
          description: ''
      security: []
      x-unitTests:
      - request:
          method: POST
          uri: /v1/vouchers/publish
          headers:
            Content-Type: application/json
            X-App-Id: c70a6f00-cf91-4756-9df5-47628850002b
            X-App-Token: 3266b9f8-e246-4f79-bdf0-833929b1380c
          body: >-
            {
              "campaign": "TEST-DEMO-1",
              "customer": {
                "source_id": "test@myshop.pl",
                "name": "Test Publish Customer"
              },
              "metadata": {
                "test": true,
                "app": "postman"
              }
            }
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: NONE
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          headers: {}
        x-testShouldPass: true
        x-testEnabled: true
        x-testName: TC4 - Publish voucher form auto-update campaign
        x-testDescription: ''
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /v1/publications:
    get:
      description: ''
      summary: List Publications
      tags:
      - Publish
      operationId: V1PublicationsGet
      produces:
      - application/json
      parameters:
      - name: X-App-Id
        in: header
        required: true
        type: string
        description: ''
      - name: X-App-Token
        in: header
        required: true
        type: string
        description: ''
      - name: Content-Type
        in: header
        required: true
        type: string
        description: ''
      responses:
        200:
          description: ''
      security: []
      x-unitTests:
      - request:
          method: GET
          uri: /v1/publications
          headers:
            X-App-Id: c70a6f00-cf91-4756-9df5-47628850002b
            X-App-Token: 3266b9f8-e246-4f79-bdf0-833929b1380c
            Content-Type: application/json
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: NONE
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          headers: {}
        x-testShouldPass: true
        x-testEnabled: true
        x-testName: List Publications
        x-testDescription: ''
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /publications:
    get:
      description: ''
      summary: List Publications filters
      tags:
      - Publish
      operationId: PublicationsGet
      produces:
      - application/json
      parameters:
      - name: filters[campaign][conditions][$is][0]
        in: query
        required: true
        type: string
        description: ''
      - name: filters[Result][conditions][$is][1]
        in: query
        required: true
        type: string
        description: ''
      - name: X-App-Id
        in: header
        required: true
        type: string
        description: ''
      - name: X-App-Token
        in: header
        required: true
        type: string
        description: ''
      - name: Content-Type
        in: header
        required: true
        type: string
        description: ''
      responses:
        200:
          description: ''
      security: []
      x-unitTests:
      - request:
          method: GET
          uri: /publications?filters[campaign][conditions][$is][0]=StaticOne&filters[Result][conditions][$is][1]=FAILURE
          headers:
            X-App-Id: c70a6f00-cf91-4756-9df5-47628850002b
            X-App-Token: 3266b9f8-e246-4f79-bdf0-833929b1380c
            Content-Type: application/json
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: NONE
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          headers: {}
        x-testShouldPass: true
        x-testEnabled: true
        x-testName: List Publications filters
        x-testDescription: ''
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /v1/vouchers/test/redemption:
    get:
      description: ''
      summary: Get voucher's redemptions
      tags:
      - Redemptions
      operationId: V1VouchersTestRedemptionGet
      produces:
      - application/json
      parameters:
      - name: X-App-Id
        in: header
        required: true
        type: string
        description: ''
      - name: X-App-Token
        in: header
        required: true
        type: string
        description: ''
      - name: Content-Type
        in: header
        required: true
        type: string
        description: ''
      responses:
        200:
          description: ''
      security: []
      x-unitTests:
      - request:
          method: GET
          uri: /v1/vouchers/test/redemption
          headers:
            X-App-Id: c70a6f00-cf91-4756-9df5-47628850002b
            X-App-Token: 3266b9f8-e246-4f79-bdf0-833929b1380c
            Content-Type: application/json
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: NONE
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          headers: {}
        x-testShouldPass: true
        x-testEnabled: true
        x-testName: Get voucher's redemptions
        x-testDescription: ''
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
    post:
      description: ''
      summary: Redeem
      tags:
      - Redeem
      operationId: V1VouchersTestRedemptionPost
      produces:
      - application/json
      parameters:
      - name: Body
        in: body
        required: true
        description: ''
        schema:
          type: object
      - name: X-App-Id
        in: header
        required: true
        type: string
        description: ''
      - name: X-App-Token
        in: header
        required: true
        type: string
        description: ''
      - name: Content-Type
        in: header
        required: true
        type: string
        description: ''
      responses:
        200:
          description: ''
      security: []
      x-unitTests:
      - request:
          method: POST
          uri: /v1/vouchers/test/redemption
          headers:
            Content-Type: application/json
            X-App-Id: c70a6f00-cf91-4756-9df5-47628850002b
            X-App-Token: 3266b9f8-e246-4f79-bdf0-833929b1380c
          body: '{}'
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: NONE
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          headers: {}
        x-testShouldPass: true
        x-testEnabled: true
        x-testName: Redeem
        x-testDescription: ''
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /v1/vouchers/NotFound123/redemption:
    post:
      description: ''
      summary: Redeem - not found
      tags:
      - Redeem
      operationId: V1VouchersNotFound123RedemptionPost
      produces:
      - application/json
      parameters:
      - name: Body
        in: body
        required: true
        description: ''
        schema:
          type: object
      - name: X-App-Id
        in: header
        required: true
        type: string
        description: ''
      - name: X-App-Token
        in: header
        required: true
        type: string
        description: ''
      - name: Content-Type
        in: header
        required: true
        type: string
        description: ''
      responses:
        200:
          description: ''
      security: []
      x-unitTests:
      - request:
          method: POST
          uri: /v1/vouchers/NotFound123/redemption
          headers:
            Content-Type: application/json
            X-App-Id: c70a6f00-cf91-4756-9df5-47628850002b
            X-App-Token: 3266b9f8-e246-4f79-bdf0-833929b1380c
          body: '{}'
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: NONE
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          headers: {}
        x-testShouldPass: true
        x-testEnabled: true
        x-testName: Redeem - not found
        x-testDescription: ''
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /v1/vouchers/invalid/redemption:
    post:
      description: ''
      summary: Redeem - expired
      tags:
      - Redeem
      operationId: V1VouchersInvalidRedemptionPost
      produces:
      - application/json
      parameters:
      - name: Body
        in: body
        required: true
        description: ''
        schema:
          type: object
      - name: X-App-Id
        in: header
        required: true
        type: string
        description: ''
      - name: X-App-Token
        in: header
        required: true
        type: string
        description: ''
      - name: Content-Type
        in: header
        required: true
        type: string
        description: ''
      responses:
        200:
          description: ''
      security: []
      x-unitTests:
      - request:
          method: POST
          uri: /v1/vouchers/invalid/redemption
          headers:
            Content-Type: application/json
            X-App-Id: c70a6f00-cf91-4756-9df5-47628850002b
            X-App-Token: 3266b9f8-e246-4f79-bdf0-833929b1380c
          body: '{}'
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: NONE
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          headers: {}
        x-testShouldPass: true
        x-testEnabled: true
        x-testName: Redeem - expired
        x-testDescription: ''
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /client/v1/redeem:
    post:
      description: ''
      summary: Redeem - client side
      tags:
      - Redeem
      operationId: ClientV1RedeemPost
      produces:
      - application/json
      parameters:
      - name: code
        in: query
        required: true
        type: string
        description: ''
      - name: Body
        in: body
        required: true
        description: ''
        schema:
          type: object
      - name: X-Client-Application-Id
        in: header
        required: true
        type: string
        description: ''
      - name: X-Client-Token
        in: header
        required: true
        type: string
        description: ''
      - name: Content-Type
        in: header
        required: true
        type: string
        description: ''
      - name: Origin
        in: header
        required: true
        type: string
        description: ''
      responses:
        200:
          description: ''
      security: []
      x-unitTests:
      - request:
          method: POST
          uri: /client/v1/redeem?code=test
          headers:
            Content-Type: application/json
            X-Client-Application-Id: 011240bf-d5fc-4ef1-9e82-11eb68c43bf5
            X-Client-Token: 9e2230c5-71fb-460a-91c6-fbee64707a20
            Origin: origin
          body: '{}'
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: NONE
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          headers: {}
        x-testShouldPass: true
        x-testEnabled: true
        x-testName: Redeem - client side
        x-testDescription: ''
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /v1/vouchers/LdprQtRL/redemption:
    post:
      description: ''
      summary: Redeem - order details
      tags:
      - Redeem
      operationId: V1VouchersLdprQtRLRedemptionPost
      produces:
      - application/json
      parameters:
      - name: Body
        in: body
        required: true
        description: ''
        schema:
          $ref: '#/definitions/Redeem  order detailsrequest'
      - name: X-App-Id
        in: header
        required: true
        type: string
        description: ''
      - name: X-App-Token
        in: header
        required: true
        type: string
        description: ''
      - name: Content-Type
        in: header
        required: true
        type: string
        description: ''
      responses:
        200:
          description: ''
      security: []
      x-unitTests:
      - request:
          method: POST
          uri: /v1/vouchers/LdprQtRL/redemption
          headers:
            Content-Type: application/json
            X-App-Id: c70a6f00-cf91-4756-9df5-47628850002b
            X-App-Token: 3266b9f8-e246-4f79-bdf0-833929b1380c
          body: >-
            {
                "order": {
                    "items": [
                      { "sku_id": "sku_dSbRQfbyUMyHnt", "quantity": "1" },
                        { "sku_id": "sku_0KtP4rvwEECQ2U", "quantity": "1" }
                    ]
                }
            }
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: NONE
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          headers: {}
        x-testShouldPass: true
        x-testEnabled: true
        x-testName: Redeem - order details
        x-testDescription: ''
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /redemptions:
    get:
      description: ''
      summary: List redemptions - success
      tags:
      - Redemptions
      operationId: RedemptionsGet
      produces:
      - application/json
      parameters:
      - name: result
        in: query
        required: true
        type: string
        description: ''
      - name: X-App-Id
        in: header
        required: true
        type: string
        description: ''
      - name: X-App-Token
        in: header
        required: true
        type: string
        description: ''
      - name: Content-Type
        in: header
        required: true
        type: string
        description: ''
      responses:
        200:
          description: ''
      security: []
      x-unitTests:
      - request:
          method: GET
          uri: /redemptions?result=SUCCESS
          headers:
            X-App-Id: c70a6f00-cf91-4756-9df5-47628850002b
            X-App-Token: 3266b9f8-e246-4f79-bdf0-833929b1380c
            Content-Type: application/json
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: NONE
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          headers: {}
        x-testShouldPass: true
        x-testEnabled: true
        x-testName: List redemptions - success
        x-testDescription: ''
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /v1/segments:
    post:
      description: ''
      summary: Create segment
      tags:
      - Segments
      operationId: V1SegmentsPost
      produces:
      - application/json
      parameters:
      - name: Body
        in: body
        required: true
        description: ''
        schema:
          $ref: '#/definitions/CreateSegmentrequest'
      - name: X-App-Id
        in: header
        required: true
        type: string
        description: ''
      - name: X-App-Token
        in: header
        required: true
        type: string
        description: ''
      - name: Content-Type
        in: header
        required: true
        type: string
        description: ''
      responses:
        200:
          description: ''
      security: []
      x-unitTests:
      - request:
          method: POST
          uri: /v1/segments
          headers:
            Content-Type: application/json
            X-App-Id: c70a6f00-cf91-4756-9df5-47628850002b
            X-App-Token: 3266b9f8-e246-4f79-bdf0-833929b1380c
          body: >-
            {
              "name": "test segment2",
              "customers": ["cust_EkqCdCA7JyIDlFBvkOMTnceJ"],
              "type": "static"
            }
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: NONE
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          headers: {}
        x-testShouldPass: true
        x-testEnabled: true
        x-testName: Create segment
        x-testDescription: ''
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /v1/segments/{createdSegmentId}:
    get:
      description: ''
      summary: Get segment
      tags:
      - Segments
      operationId: V1SegmentsByCreatedSegmentIdGet
      produces:
      - application/json
      parameters:
      - name: X-App-Id
        in: header
        required: true
        type: string
        description: ''
      - name: X-App-Token
        in: header
        required: true
        type: string
        description: ''
      - name: Content-Type
        in: header
        required: true
        type: string
        description: ''
      - name: createdSegmentId
        in: path
        required: true
        type: string
        description: ''
      responses:
        200:
          description: ''
      security: []
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
    delete:
      description: ''
      summary: Delete segment
      tags:
      - Segments
      operationId: V1SegmentsByCreatedSegmentIdDelete
      produces:
      - application/json
      parameters:
      - name: X-App-Id
        in: header
        required: true
        type: string
        description: ''
      - name: X-App-Token
        in: header
        required: true
        type: string
        description: ''
      - name: Content-Type
        in: header
        required: true
        type: string
        description: ''
      - name: createdSegmentId
        in: path
        required: true
        type: string
        description: ''
      responses:
        200:
          description: ''
      security: []
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /v1/vouchers:
    post:
      description: Create discount voucher without code
      summary: TC5 - Create voucher without code
      tags:
      - TC5 - Rollback Redemption
      operationId: V1VouchersPost5
      produces:
      - application/json
      parameters:
      - name: Body
        in: body
        required: true
        description: ''
        schema:
          $ref: '#/definitions/Tc2  create voucher without coderequest'
      - name: X-App-Id
        in: header
        required: true
        type: string
        description: ''
      - name: X-App-Token
        in: header
        required: true
        type: string
        description: ''
      - name: Content-Type
        in: header
        required: true
        type: string
        description: ''
      responses:
        200:
          description: ''
      security: []
      x-unitTests:
      - request:
          method: POST
          uri: /v1/vouchers
          headers:
            Content-Type: application/json
            X-App-Id: c70a6f00-cf91-4756-9df5-47628850002b
            X-App-Token: 3266b9f8-e246-4f79-bdf0-833929b1380c
          body: "{\n    \"type\": \"DISCOUNT_VOUCHER\",\n    \"discount\": {\n        \"percent_off\": \"10.0\",\n        \"type\": \"PERCENT\"\n    },\n    \"redemption\": {\n        \"quantity\": \"1\" \n    },\n    \"category\": \"postman-tc5\",\n    \"code_config\": {\n      \"pattern\": \"TC5-PROMO-#######\"\n    }\n}"
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: NONE
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          headers: {}
        x-testShouldPass: true
        x-testEnabled: true
        x-testName: TC5 - Create voucher without code
        x-testDescription: Create discount voucher without code
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /v1/vouchers/1516274639:
    post:
      description: Create discount voucher with a given code
      summary: Create voucher with a given code
      tags:
      - Standalone2
      operationId: V1Vouchers1516274639Post2
      produces:
      - application/json
      parameters:
      - name: Body
        in: body
        required: true
        description: ''
        schema:
          $ref: '#/definitions/CreateVoucherWithAGivenCoderequest'
      - name: X-App-Id
        in: header
        required: true
        type: string
        description: ''
      - name: X-App-Token
        in: header
        required: true
        type: string
        description: ''
      - name: Content-Type
        in: header
        required: true
        type: string
        description: ''
      responses:
        200:
          description: ''
      security: []
      x-unitTests:
      - request:
          method: POST
          uri: /v1/vouchers/1516274639
          headers:
            Content-Type: application/json
            X-App-Id: c70a6f00-cf91-4756-9df5-47628850002b
            X-App-Token: 3266b9f8-e246-4f79-bdf0-833929b1380c
          body: "{\n    \"type\": \"DISCOUNT_VOUCHER\",\n    \"discount\": {\n        \"percent_off\": \"10.0\",\n        \"type\": \"PERCENT\"\n    },\n    \"redemption\": {\n        \"quantity\": \"1\" \n    },\n    \"category\": \"postman\"\n}"
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: NONE
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          headers: {}
        x-testShouldPass: true
        x-testEnabled: true
        x-testName: Create voucher with a given code
        x-testDescription: Create discount voucher with a given code
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /v1/vouchers/test:
    get:
      description: Get existing voucher
      summary: Get voucher - existing
      tags:
      - Standalone2
      operationId: V1VouchersTestGet2
      produces:
      - application/json
      parameters:
      - name: X-App-Id
        in: header
        required: true
        type: string
        description: ''
      - name: X-App-Token
        in: header
        required: true
        type: string
        description: ''
      - name: Content-Type
        in: header
        required: true
        type: string
        description: ''
      responses:
        200:
          description: ''
      security: []
      x-unitTests:
      - request:
          method: GET
          uri: /v1/vouchers/test
          headers:
            X-App-Id: c70a6f00-cf91-4756-9df5-47628850002b
            X-App-Token: 3266b9f8-e246-4f79-bdf0-833929b1380c
            Content-Type: application/json
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: NONE
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          headers: {}
        x-testShouldPass: true
        x-testEnabled: true
        x-testName: Get voucher - existing
        x-testDescription: Get existing voucher
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
    put:
      description: Update voucher metadata
      summary: Update voucher
      tags:
      - Standalone2
      operationId: V1VouchersTestPut2
      produces:
      - application/json
      parameters:
      - name: Body
        in: body
        required: true
        description: ''
        schema:
          $ref: '#/definitions/UpdateVoucherrequest'
      - name: X-App-Id
        in: header
        required: true
        type: string
        description: ''
      - name: X-App-Token
        in: header
        required: true
        type: string
        description: ''
      - name: Content-Type
        in: header
        required: true
        type: string
        description: ''
      responses:
        200:
          description: ''
      security: []
      x-unitTests:
      - request:
          method: PUT
          uri: /v1/vouchers/test
          headers:
            Content-Type: application/json
            X-App-Id: c70a6f00-cf91-4756-9df5-47628850002b
            X-App-Token: 3266b9f8-e246-4f79-bdf0-833929b1380c
          body: "{\n    \"metadata\": {\n        \"update_time\": \"1516274639\" \n    },\n    \"category\": \"postman\"\n}"
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: NONE
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          headers: {}
        x-testShouldPass: true
        x-testEnabled: true
        x-testName: Update voucher
        x-testDescription: Update voucher metadata
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /v1/vouchers/notfound123:
    get:
      description: ''
      summary: Get voucher - non-existent
      tags:
      - Standalone2
      operationId: V1VouchersNotfound123Get2
      produces:
      - application/json
      parameters:
      - name: X-App-Id
        in: header
        required: true
        type: string
        description: ''
      - name: X-App-Token
        in: header
        required: true
        type: string
        description: ''
      - name: Content-Type
        in: header
        required: true
        type: string
        description: ''
      responses:
        200:
          description: ''
      security: []
      x-unitTests:
      - request:
          method: GET
          uri: /v1/vouchers/notfound123
          headers:
            X-App-Id: c70a6f00-cf91-4756-9df5-47628850002b
            X-App-Token: 3266b9f8-e246-4f79-bdf0-833929b1380c
            Content-Type: application/json
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: NONE
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          headers: {}
        x-testShouldPass: true
        x-testEnabled: true
        x-testName: Get voucher - non-existent
        x-testDescription: ''
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /vouchers:
    get:
      description: ''
      summary: List vouchers - paging
      tags:
      - Standalone2
      operationId: VouchersGet4
      produces:
      - application/json
      parameters:
      - name: campaign
        in: query
        required: true
        type: string
        description: ''
      - name: limit
        in: query
        required: true
        type: integer
        format: int32
        description: ''
      - name: skip
        in: query
        required: true
        type: integer
        format: int32
        description: ''
      - name: X-App-Id
        in: header
        required: true
        type: string
        description: ''
      - name: X-App-Token
        in: header
        required: true
        type: string
        description: ''
      - name: Content-Type
        in: header
        required: true
        type: string
        description: ''
      responses:
        200:
          description: ''
      security: []
      x-unitTests:
      - request:
          method: GET
          uri: /vouchers?campaign=postman-paging&limit=2&skip=8
          headers:
            X-App-Id: c70a6f00-cf91-4756-9df5-47628850002b
            X-App-Token: 3266b9f8-e246-4f79-bdf0-833929b1380c
            Content-Type: application/json
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: NONE
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          headers: {}
        x-testShouldPass: true
        x-testEnabled: true
        x-testName: List vouchers - paging
        x-testDescription: ''
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /v1/vouchers/{generatedCode}:
    delete:
      description: ''
      summary: Delete voucher
      tags:
      - Standalone2
      operationId: V1VouchersByGeneratedCodeDelete2
      produces:
      - application/json
      parameters:
      - name: X-App-Id
        in: header
        required: true
        type: string
        description: ''
      - name: X-App-Token
        in: header
        required: true
        type: string
        description: ''
      - name: Content-Type
        in: header
        required: true
        type: string
        description: ''
      - name: generatedCode
        in: path
        required: true
        type: string
        description: ''
      responses:
        200:
          description: ''
      security: []
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /v1/vouchers/{TC1-code}/validate:
    post:
      description: ''
      summary: TC1 - Validate
      tags:
      - TC1 - Redemption limit 1
      operationId: V1VouchersValidateByTC1CodePost
      produces:
      - application/json
      parameters:
      - name: Body
        in: body
        required: true
        description: ''
        schema:
          type: object
      - name: X-App-Id
        in: header
        required: true
        type: string
        description: ''
      - name: X-App-Token
        in: header
        required: true
        type: string
        description: ''
      - name: Content-Type
        in: header
        required: true
        type: string
        description: ''
      - name: TC1-code
        in: path
        required: true
        type: string
        description: ''
      responses:
        200:
          description: ''
      security: []
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /v1/vouchers/{TC1-code}/redemption:
    get:
      description: ''
      summary: TC1 - Get  redemptions
      tags:
      - TC1 - Redemption limit 1
      operationId: V1VouchersRedemptionByTC1CodeGet
      produces:
      - application/json
      parameters:
      - name: X-App-Id
        in: header
        required: true
        type: string
        description: ''
      - name: X-App-Token
        in: header
        required: true
        type: string
        description: ''
      - name: Content-Type
        in: header
        required: true
        type: string
        description: ''
      - name: TC1-code
        in: path
        required: true
        type: string
        description: ''
      responses:
        200:
          description: ''
      security: []
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
    post:
      description: Should fail because the redemption limit is set to 1
      summary: TC1 - Second redeem
      tags:
      - TC1 - Redemption limit 1
      operationId: V1VouchersRedemptionByTC1CodePost2
      produces:
      - application/json
      parameters:
      - name: Body
        in: body
        required: true
        description: ''
        schema:
          type: object
      - name: X-App-Id
        in: header
        required: true
        type: string
        description: ''
      - name: X-App-Token
        in: header
        required: true
        type: string
        description: ''
      - name: Content-Type
        in: header
        required: true
        type: string
        description: ''
      - name: TC1-code
        in: path
        required: true
        type: string
        description: ''
      responses:
        200:
          description: ''
      security: []
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /v1/vouchers/IzvHT3Ba/redemption:
    post:
      description: ''
      summary: TC3 - Redeem
      tags:
      - TC3 - discount rules
      operationId: V1VouchersIzvHT3BaRedemptionPost
      produces:
      - application/json
      parameters:
      - name: Body
        in: body
        required: true
        description: ''
        schema:
          $ref: '#/definitions/Tc3  redeemrequest'
      - name: X-App-Id
        in: header
        required: true
        type: string
        description: ''
      - name: X-App-Token
        in: header
        required: true
        type: string
        description: ''
      - name: Content-Type
        in: header
        required: true
        type: string
        description: ''
      responses:
        200:
          description: ''
      security: []
      x-unitTests:
      - request:
          method: POST
          uri: /v1/vouchers/IzvHT3Ba/redemption
          headers:
            Content-Type: application/json
            X-App-Id: c70a6f00-cf91-4756-9df5-47628850002b
            X-App-Token: 3266b9f8-e246-4f79-bdf0-833929b1380c
          body: >
            {
                "customer": {
                     "id": "cust_eIH9UtbvIfRUP9nZyBqDeMEv"
                },
                "order": {
                    "items": [
                        { "product_id": "prod_anJ03RZZq74z4v", "quantity": "1" }
                    ]
                }
            }
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: NONE
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          headers: {}
        x-testShouldPass: true
        x-testEnabled: true
        x-testName: TC3 - Redeem
        x-testDescription: ''
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /v1/vouchers/{TC3-code}/validate:
    post:
      description: ''
      summary: Validate voucher for given customer order
      tags:
      - TC3 - e-commerce integration
      operationId: V1VouchersValidateByTC3CodePost
      produces:
      - application/json
      parameters:
      - name: Body
        in: body
        required: true
        description: ''
        schema:
          $ref: '#/definitions/ValidateVoucherForGivenCustomerOrderrequest'
      - name: X-App-Id
        in: header
        required: true
        type: string
        description: ''
      - name: X-App-Token
        in: header
        required: true
        type: string
        description: ''
      - name: Content-Type
        in: header
        required: true
        type: string
        description: ''
      - name: TC3-code
        in: path
        required: true
        type: string
        description: ''
      responses:
        200:
          description: ''
      security: []
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /vouchers/{TC3-code}/redemption:
    post:
      description: ''
      summary: Redeem
      tags:
      - TC3 - e-commerce integration
      operationId: VouchersRedemptionByTC3CodePost
      produces:
      - application/json
      parameters:
      - name: tracking_id
        in: query
        required: true
        type: string
        description: ''
      - name: Body
        in: body
        required: true
        description: ''
        schema:
          $ref: '#/definitions/RedeemRequest'
      - name: X-App-Id
        in: header
        required: true
        type: string
        description: ''
      - name: X-App-Token
        in: header
        required: true
        type: string
        description: ''
      - name: Content-Type
        in: header
        required: true
        type: string
        description: ''
      - name: TC3-code
        in: path
        required: true
        type: string
        description: ''
      responses:
        200:
          description: ''
      security: []
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /v1/vouchers/{TC3-code}/redemption:
    get:
      description: ''
      summary: Get  redemption
      tags:
      - TC3 - e-commerce integration
      operationId: V1VouchersRedemptionByTC3CodeGet
      produces:
      - application/json
      parameters:
      - name: X-App-Id
        in: header
        required: true
        type: string
        description: ''
      - name: X-App-Token
        in: header
        required: true
        type: string
        description: ''
      - name: Content-Type
        in: header
        required: true
        type: string
        description: ''
      - name: TC3-code
        in: path
        required: true
        type: string
        description: ''
      responses:
        200:
          description: ''
      security: []
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
    post:
      description: Do redemption once again and update customer data.
      summary: TC2 - Redeem 2nd time after rollback
      tags:
      - TC3 - e-commerce integration
      operationId: V1VouchersRedemptionByTC3CodePost
      produces:
      - application/json
      parameters:
      - name: Body
        in: body
        required: true
        description: ''
        schema:
          $ref: '#/definitions/Tc2  redeem 2nd time after rollbackrequest'
      - name: X-App-Id
        in: header
        required: true
        type: string
        description: ''
      - name: X-App-Token
        in: header
        required: true
        type: string
        description: ''
      - name: Content-Type
        in: header
        required: true
        type: string
        description: ''
      - name: TC3-code
        in: path
        required: true
        type: string
        description: ''
      responses:
        200:
          description: ''
      security: []
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /v1/customers/{TC3-customer-id}:
    get:
      description: ''
      summary: TC2 - Get  customer
      tags:
      - TC3 - e-commerce integration
      operationId: V1CustomersByTC3CustomerIdGet
      produces:
      - application/json
      parameters:
      - name: X-App-Id
        in: header
        required: true
        type: string
        description: ''
      - name: X-App-Token
        in: header
        required: true
        type: string
        description: ''
      - name: Content-Type
        in: header
        required: true
        type: string
        description: ''
      - name: TC3-customer-id
        in: path
        required: true
        type: string
        description: ''
      responses:
        200:
          description: ''
      security: []
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /redemptions/{TC3-redemption-id}/rollback:
    post:
      description: Your business logic may include a case when you need to undo a redemption. You can revert a redemption by calling this API endpoint.
      summary: TC2 - Rollback redemption
      tags:
      - TC3 - e-commerce integration
      operationId: RedemptionsRollbackByTC3RedemptionIdPost
      produces:
      - application/json
      parameters:
      - name: tracking_id
        in: query
        required: true
        type: string
        description: ''
      - name: X-App-Id
        in: header
        required: true
        type: string
        description: ''
      - name: X-App-Token
        in: header
        required: true
        type: string
        description: ''
      - name: Content-Type
        in: header
        required: true
        type: string
        description: ''
      - name: TC3-redemption-id
        in: path
        required: true
        type: string
        description: ''
      responses:
        200:
          description: ''
      security: []
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /v1/vouchers/TC4-DIS-BJ5J-iRuy-L7C-2016:
    get:
      description: ''
      summary: TC4 - Get voucher
      tags:
      - TC4 - Distribution
      operationId: V1VouchersTC4DISBJ5JIRuyL7C2016Get
      produces:
      - application/json
      parameters:
      - name: X-App-Id
        in: header
        required: true
        type: string
        description: ''
      - name: X-App-Token
        in: header
        required: true
        type: string
        description: ''
      - name: Content-Type
        in: header
        required: true
        type: string
        description: ''
      responses:
        200:
          description: ''
      security: []
      x-unitTests:
      - request:
          method: GET
          uri: /v1/vouchers/TC4-DIS-BJ5J-iRuy-L7C-2016
          headers:
            X-App-Id: c70a6f00-cf91-4756-9df5-47628850002b
            X-App-Token: 3266b9f8-e246-4f79-bdf0-833929b1380c
            Content-Type: application/json
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: NONE
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          headers: {}
        x-testShouldPass: true
        x-testEnabled: true
        x-testName: TC4 - Get voucher
        x-testDescription: ''
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /v1/vouchers/{TC5-code}/redemption:
    post:
      description: ''
      summary: TC5 - Redeem 2nd time
      tags:
      - TC5 - Rollback Redemption
      operationId: V1VouchersRedemptionByTC5CodePost2
      produces:
      - application/json
      parameters:
      - name: Body
        in: body
        required: true
        description: ''
        schema:
          $ref: '#/definitions/Tc5  redeemrequest'
      - name: X-App-Id
        in: header
        required: true
        type: string
        description: ''
      - name: X-App-Token
        in: header
        required: true
        type: string
        description: ''
      - name: Content-Type
        in: header
        required: true
        type: string
        description: ''
      - name: TC5-code
        in: path
        required: true
        type: string
        description: ''
      responses:
        200:
          description: ''
      security: []
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /redemptions/{TC5-redemption-id}/rollback:
    post:
      description: ''
      summary: TC5 - Rollback 2nd time Redemption - pass related customer profile
      tags:
      - TC5 - Rollback Redemption
      operationId: RedemptionsRollbackByTC5RedemptionIdPost2
      produces:
      - application/json
      parameters:
      - name: reason
        in: query
        required: true
        type: string
        description: ''
      - name: X-App-Id
        in: header
        required: true
        type: string
        description: ''
      - name: X-App-Token
        in: header
        required: true
        type: string
        description: ''
      - name: Content-Type
        in: header
        required: true
        type: string
        description: ''
      - name: TC5-redemption-id
        in: path
        required: true
        type: string
        description: ''
      responses:
        200:
          description: ''
      security: []
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /v1/validation-rules:
    post:
      description: ''
      summary: Create
      tags:
      - Validation rules
      operationId: V1ValidationRulesPost2
      produces:
      - application/json
      parameters:
      - name: Body
        in: body
        required: true
        description: ''
        schema:
          $ref: '#/definitions/CreateRequest115'
      - name: X-App-Id
        in: header
        required: true
        type: string
        description: ''
      - name: X-App-Token
        in: header
        required: true
        type: string
        description: ''
      - name: Content-Type
        in: header
        required: true
        type: string
        description: ''
      responses:
        200:
          description: ''
      security: []
      x-unitTests:
      - request:
          method: POST
          uri: /v1/validation-rules
          headers:
            Content-Type: application/json
            X-App-Id: c70a6f00-cf91-4756-9df5-47628850002b
            X-App-Token: 3266b9f8-e246-4f79-bdf0-833929b1380c
          body: >-
            {
              "voucher_code" : "val_rul_test",
              "orders": {
                  "total_amount": {
                    "$more_than":[10000]
                  }
                }
            }
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: NONE
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          headers: {}
        x-testShouldPass: true
        x-testEnabled: true
        x-testName: Create
        x-testDescription: ''
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /v1/validation-rules/{createdValidationRulesId}:
    get:
      description: ''
      summary: Get
      tags:
      - Validation rules
      operationId: V1ValidationRulesByCreatedValidationRulesIdGet2
      produces:
      - application/json
      parameters:
      - name: X-App-Id
        in: header
        required: true
        type: string
        description: ''
      - name: X-App-Token
        in: header
        required: true
        type: string
        description: ''
      - name: Content-Type
        in: header
        required: true
        type: string
        description: ''
      - name: createdValidationRulesId
        in: path
        required: true
        type: string
        description: ''
      responses:
        200:
          description: ''
      security: []
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
    put:
      description: ''
      summary: Update
      tags:
      - Validation rules
      operationId: V1ValidationRulesByCreatedValidationRulesIdPut
      produces:
      - application/json
      parameters:
      - name: Body
        in: body
        required: true
        description: ''
        schema:
          $ref: '#/definitions/UpdateRequest118'
      - name: X-App-Id
        in: header
        required: true
        type: string
        description: ''
      - name: X-App-Token
        in: header
        required: true
        type: string
        description: ''
      - name: Content-Type
        in: header
        required: true
        type: string
        description: ''
      - name: createdValidationRulesId
        in: path
        required: true
        type: string
        description: ''
      responses:
        200:
          description: ''
      security: []
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
    delete:
      description: ''
      summary: Delete
      tags:
      - Validation rules
      operationId: V1ValidationRulesByCreatedValidationRulesIdDelete
      produces:
      - application/json
      parameters:
      - name: X-App-Id
        in: header
        required: true
        type: string
        description: ''
      - name: X-App-Token
        in: header
        required: true
        type: string
        description: ''
      - name: Content-Type
        in: header
        required: true
        type: string
        description: ''
      - name: createdValidationRulesId
        in: path
        required: true
        type: string
        description: ''
      responses:
        200:
          description: ''
      security: []
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /v1/campaigns/{createdCampaignName}/vouchers:
    post:
      description: ''
      summary: TC6 - Add voucher to campaign
      tags:
      - TC6 - Campaign with Validation Rules
      operationId: V1CampaignsVouchersByCreatedCampaignNamePost
      produces:
      - application/json
      parameters:
      - name: Body
        in: body
        required: true
        description: ''
        schema:
          $ref: '#/definitions/Tc6  add voucher to campaignrequest'
      - name: X-App-Id
        in: header
        required: true
        type: string
        description: ''
      - name: X-App-Token
        in: header
        required: true
        type: string
        description: ''
      - name: Content-Type
        in: header
        required: true
        type: string
        description: ''
      - name: createdCampaignName
        in: path
        required: true
        type: string
        description: ''
      responses:
        200:
          description: ''
      security: []
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /v1/vouchers/test/validate:
    post:
      description: ''
      summary: Validate
      tags:
      - Validate
      operationId: V1VouchersTestValidatePost
      produces:
      - application/json
      parameters:
      - name: Body
        in: body
        required: true
        description: ''
        schema:
          $ref: '#/definitions/ValidateRequest'
      - name: X-App-Id
        in: header
        required: true
        type: string
        description: ''
      - name: X-App-Token
        in: header
        required: true
        type: string
        description: ''
      - name: Content-Type
        in: header
        required: true
        type: string
        description: ''
      responses:
        200:
          description: ''
      security: []
      x-unitTests:
      - request:
          method: POST
          uri: /v1/vouchers/test/validate
          headers:
            Content-Type: application/json
            X-App-Id: c70a6f00-cf91-4756-9df5-47628850002b
            X-App-Token: 3266b9f8-e246-4f79-bdf0-833929b1380c
          body: >-
            {
              "order":{
                "amount":1000
              }
            }
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: NONE
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          headers: {}
        x-testShouldPass: true
        x-testEnabled: true
        x-testName: Validate
        x-testDescription: ''
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /v1/vouchers/invalid/validate:
    post:
      description: ''
      summary: Validate - expired
      tags:
      - Validate
      operationId: V1VouchersInvalidValidatePost
      produces:
      - application/json
      parameters:
      - name: Body
        in: body
        required: true
        description: ''
        schema:
          type: object
      - name: X-App-Id
        in: header
        required: true
        type: string
        description: ''
      - name: X-App-Token
        in: header
        required: true
        type: string
        description: ''
      - name: Content-Type
        in: header
        required: true
        type: string
        description: ''
      responses:
        200:
          description: ''
      security: []
      x-unitTests:
      - request:
          method: POST
          uri: /v1/vouchers/invalid/validate
          headers:
            Content-Type: application/json
            X-App-Id: c70a6f00-cf91-4756-9df5-47628850002b
            X-App-Token: 3266b9f8-e246-4f79-bdf0-833929b1380c
          body: '{}'
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: NONE
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          headers: {}
        x-testShouldPass: true
        x-testEnabled: true
        x-testName: Validate - expired
        x-testDescription: ''
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /v1/vouchers/invalid-disabled/validate:
    post:
      description: ''
      summary: Validate - disabled
      tags:
      - Validate
      operationId: V1VouchersInvalidDisabledValidatePost
      produces:
      - application/json
      parameters:
      - name: Body
        in: body
        required: true
        description: ''
        schema:
          type: object
      - name: X-App-Id
        in: header
        required: true
        type: string
        description: ''
      - name: X-App-Token
        in: header
        required: true
        type: string
        description: ''
      - name: Content-Type
        in: header
        required: true
        type: string
        description: ''
      responses:
        200:
          description: ''
      security: []
      x-unitTests:
      - request:
          method: POST
          uri: /v1/vouchers/invalid-disabled/validate
          headers:
            Content-Type: application/json
            X-App-Id: c70a6f00-cf91-4756-9df5-47628850002b
            X-App-Token: 3266b9f8-e246-4f79-bdf0-833929b1380c
          body: '{}'
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: NONE
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          headers: {}
        x-testShouldPass: true
        x-testEnabled: true
        x-testName: Validate - disabled
        x-testDescription: ''
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /client/v1/validate:
    get:
      description: ''
      summary: Validate - client side
      tags:
      - Validate
      operationId: ClientV1ValidateGet
      produces:
      - application/json
      parameters:
      - name: code
        in: query
        required: true
        type: string
        description: ''
      - name: X-Client-Application-Id
        in: header
        required: true
        type: string
        description: ''
      - name: X-Client-Token
        in: header
        required: true
        type: string
        description: ''
      - name: Content-Type
        in: header
        required: true
        type: string
        description: ''
      - name: Origin
        in: header
        required: true
        type: string
        description: ''
      responses:
        200:
          description: ''
      security: []
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /v1/vouchers/IzvHT3Ba/validate:
    post:
      description: ''
      summary: Validate - order details
      tags:
      - Validate
      operationId: V1VouchersIzvHT3BaValidatePost
      produces:
      - application/json
      parameters:
      - name: Body
        in: body
        required: true
        description: ''
        schema:
          $ref: '#/definitions/Validate  order detailsrequest'
      - name: X-App-Id
        in: header
        required: true
        type: string
        description: ''
      - name: X-App-Token
        in: header
        required: true
        type: string
        description: ''
      - name: Content-Type
        in: header
        required: true
        type: string
        description: ''
      responses:
        200:
          description: ''
      security: []
      x-unitTests:
      - request:
          method: POST
          uri: /v1/vouchers/IzvHT3Ba/validate
          headers:
            Content-Type: application/json
            X-App-Id: c70a6f00-cf91-4756-9df5-47628850002b
            X-App-Token: 3266b9f8-e246-4f79-bdf0-833929b1380c
          body: >
            {
                "customer": {
                     "id": "cust_eIH9UtbvIfRUP9nZyBqDeMEv"
                },
                "order": {
                    "items": [
                        { "product_id": "prod_anJ03RZZq74z4v", "quantity": "1" }
                    ]
                }
            }
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: NONE
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          headers: {}
        x-testShouldPass: true
        x-testEnabled: true
        x-testName: Validate - order details
        x-testDescription: ''
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /v1/vouchers/LdprQtRL/validate:
    post:
      description: ''
      summary: Validate - order details skus
      tags:
      - Validate
      operationId: V1VouchersLdprQtRLValidatePost
      produces:
      - application/json
      parameters:
      - name: Body
        in: body
        required: true
        description: ''
        schema:
          $ref: '#/definitions/Validate  order details skusrequest'
      - name: X-App-Id
        in: header
        required: true
        type: string
        description: ''
      - name: X-App-Token
        in: header
        required: true
        type: string
        description: ''
      - name: Content-Type
        in: header
        required: true
        type: string
        description: ''
      responses:
        200:
          description: ''
      security: []
      x-unitTests:
      - request:
          method: POST
          uri: /v1/vouchers/LdprQtRL/validate
          headers:
            Content-Type: application/json
            X-App-Id: c70a6f00-cf91-4756-9df5-47628850002b
            X-App-Token: 3266b9f8-e246-4f79-bdf0-833929b1380c
          body: >
            {
                "order": {
                    "items": [
                      { "sku_id": "sku_dSbRQfbyUMyHnt", "quantity": "1" },
                        { "sku_id": "sku_0KtP4rvwEECQ2U", "quantity": "1" }
                    ]
                }
            }
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: NONE
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          headers: {}
        x-testShouldPass: true
        x-testEnabled: true
        x-testName: Validate - order details skus
        x-testDescription: ''
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
definitions:
  CreateCampaignrequest:
    title: Create campaignRequest
    example:
      name: test campaign 1516274639
      start_date: 2016-10-26T00:00:00.0000000Z
      expiration_date: 2016-12-26T00:00:00.0000000Z
      vouchers_count: 100
      voucher:
        type: DISCOUNT_VOUCHER
        discount:
          percent_off: 10.0
          type: PERCENT
        redemption:
          quantity: 1
        code_config:
          pattern: TC6-PROMO-#######
      metadata:
        test: true
    type: object
    properties:
      name:
        description: ''
        example: test campaign 1516274639
        type: string
      start_date:
        description: ''
        example: 10/26/2016 12:00:00 AM
        type: string
      expiration_date:
        description: ''
        example: 12/26/2016 12:00:00 AM
        type: string
      vouchers_count:
        description: ''
        example: 100
        type: integer
        format: int32
      voucher:
        $ref: '#/definitions/Voucher'
      metadata:
        $ref: '#/definitions/Metadata'
    required:
    - name
    - start_date
    - expiration_date
    - vouchers_count
    - voucher
    - metadata
  Voucher:
    title: Voucher
    example:
      type: DISCOUNT_VOUCHER
      discount:
        percent_off: 10.0
        type: PERCENT
      redemption:
        quantity: 1
      code_config:
        pattern: TC6-PROMO-#######
    type: object
    properties:
      type:
        description: ''
        example: DISCOUNT_VOUCHER
        type: string
      discount:
        $ref: '#/definitions/Discount'
      redemption:
        $ref: '#/definitions/Redemption'
      code_config:
        $ref: '#/definitions/CodeConfig'
    required:
    - type
    - discount
    - redemption
    - code_config
  Discount:
    title: Discount
    example:
      percent_off: 10.0
      type: PERCENT
    type: object
    properties:
      percent_off:
        description: ''
        example: 10.0
        type: string
      type:
        description: ''
        example: PERCENT
        type: string
    required:
    - percent_off
    - type
  Redemption:
    title: Redemption
    example:
      quantity: 1
    type: object
    properties:
      quantity:
        description: ''
        example: 1
        type: integer
        format: int32
    required:
    - quantity
  CodeConfig:
    title: CodeConfig
    example:
      pattern: TC6-PROMO-#######
    type: object
    properties:
      pattern:
        description: ''
        example: TC6-PROMO-#######
        type: string
    required:
    - pattern
  Metadata:
    title: Metadata
    example:
      test: true
    type: object
    properties:
      test:
        description: ''
        example: true
        type: boolean
    required:
    - test
  CreateGiftCardCampaignrequest:
    title: Create gift card campaignRequest
    example:
      name: gitf_card_1516274639
      vouchers_count: 50
      voucher:
        type: GIFT_VOUCHER
        gift:
          amount: 10000
        redemption:
          quantity: 
    type: object
    properties:
      name:
        description: ''
        example: gitf_card_1516274639
        type: string
      vouchers_count:
        description: ''
        example: 50
        type: integer
        format: int32
      voucher:
        $ref: '#/definitions/Voucher7'
    required:
    - name
    - vouchers_count
    - voucher
  Voucher7:
    title: Voucher7
    example:
      type: GIFT_VOUCHER
      gift:
        amount: 10000
      redemption:
        quantity: 
    type: object
    properties:
      type:
        description: ''
        example: GIFT_VOUCHER
        type: string
      gift:
        $ref: '#/definitions/Gift'
      redemption:
        $ref: '#/definitions/Redemption9'
    required:
    - type
    - gift
    - redemption
  Gift:
    title: Gift
    example:
      amount: 10000
    type: object
    properties:
      amount:
        description: ''
        example: 10000
        type: integer
        format: int32
    required:
    - amount
  Redemption9:
    title: Redemption9
    example:
      quantity: 
    type: object
    properties:
      quantity:
        description: ''
    required:
    - quantity
  Create  src idrequest:
    title: Create - src idRequest
    example:
      name: Jan Kowalski
      email: jan@kowalski.pl
      description: 1516274639
      source_id: src_id
      phone: +48 123456789
    type: object
    properties:
      name:
        description: ''
        example: Jan Kowalski
        type: string
      email:
        description: ''
        example: jan@kowalski.pl
        type: string
      description:
        description: ''
        example: 1516274639
        type: string
      source_id:
        description: ''
        example: src_id
        type: string
      phone:
        description: ''
        example: +48 123456789
        type: string
    required:
    - name
    - email
    - description
    - source_id
    - phone
  UpdateRequest:
    title: UpdateRequest
    example:
      name: John Doe
      email: john@doe.com
    type: object
    properties:
      name:
        description: ''
        example: John Doe
        type: string
      email:
        description: ''
        example: john@doe.com
        type: string
    required:
    - name
    - email
  CreateRequest:
    title: CreateRequest
    example:
      name: Jan Kowalski
      email: jan1516274639@kowalski.pl
    type: object
    properties:
      name:
        description: ''
        example: Jan Kowalski
        type: string
      email:
        description: ''
        example: jan1516274639@kowalski.pl
        type: string
    required:
    - name
    - email
  DeleteRequest:
    title: DeleteRequest
    example:
      name: Jan Kowalski
      email: jan1516274639@kowalski.pl
    type: object
    properties:
      name:
        description: ''
        example: Jan Kowalski
        type: string
      email:
        description: ''
        example: jan1516274639@kowalski.pl
        type: string
    required:
    - name
    - email
  DisableRequest:
    title: DisableRequest
    example:
      campaign: 100k-test
      channel: MailChimp
    type: object
    properties:
      campaign:
        description: ''
        example: 100k-test
        type: string
      channel:
        description: ''
        example: MailChimp
        type: string
    required:
    - campaign
    - channel
  CreateExportrequest:
    title: Create ExportRequest
    example:
      exported_object: voucher
      parameters:
        fields:
        - code
        - voucher_type
        filter:
          categories:
            conditions:
              $in:
              - postman
    type: object
    properties:
      exported_object:
        description: ''
        example: voucher
        type: string
      parameters:
        $ref: '#/definitions/Parameters'
    required:
    - exported_object
    - parameters
  Parameters:
    title: Parameters
    example:
      fields:
      - code
      - voucher_type
      filter:
        categories:
          conditions:
            $in:
            - postman
    type: object
    properties:
      fields:
        description: ''
        example:
        - code
        - voucher_type
        type: array
        items:
          type: string
      filter:
        $ref: '#/definitions/Filter'
    required:
    - fields
    - filter
  Filter:
    title: Filter
    example:
      categories:
        conditions:
          $in:
          - postman
    type: object
    properties:
      categories:
        $ref: '#/definitions/Categories'
    required:
    - categories
  Categories:
    title: Categories
    example:
      conditions:
        $in:
        - postman
    type: object
    properties:
      conditions:
        $ref: '#/definitions/Conditions'
    required:
    - conditions
  Conditions:
    title: Conditions
    example:
      $in:
      - postman
    type: object
    properties:
      $in:
        description: ''
        example:
        - postman
        type: array
        items:
          type: string
    required:
    - $in
  Import vouchers  duplicaterequest:
    title: Import vouchers - duplicateRequest
    example:
      code: test
      category: postman
      type: DISCOUNT_VOUCHER
      discount:
        amount_off: 3000
        type: AMOUNT
      start_date: 2015-12-01T23:00:00.0000000Z
      expiration_date: 2015-12-19T23:00:00.0000000Z
      redemption:
        quantity: 1
      metadata:
        unit: EUR
      additional_info: secret-code1
    type: object
    properties:
      code:
        description: ''
        example: test
        type: string
      category:
        description: ''
        example: postman
        type: string
      type:
        description: ''
        example: DISCOUNT_VOUCHER
        type: string
      discount:
        $ref: '#/definitions/Discount21'
      start_date:
        description: ''
        example: 12/1/2015 11:00:00 PM
        type: string
      expiration_date:
        description: ''
        example: 12/19/2015 11:00:00 PM
        type: string
      redemption:
        $ref: '#/definitions/Redemption22'
      metadata:
        $ref: '#/definitions/Metadata23'
      additional_info:
        description: ''
        example: secret-code1
        type: string
    required:
    - code
    - category
    - type
    - discount
    - start_date
    - expiration_date
    - redemption
    - metadata
    - additional_info
  Discount21:
    title: Discount21
    example:
      amount_off: 3000
      type: AMOUNT
    type: object
    properties:
      amount_off:
        description: ''
        example: 3000
        type: integer
        format: int32
      type:
        description: ''
        example: AMOUNT
        type: string
    required:
    - amount_off
    - type
  Redemption22:
    title: Redemption22
    example:
      quantity: 1
    type: object
    properties:
      quantity:
        description: ''
        example: 1
        type: number
        format: double
    required:
    - quantity
  Metadata23:
    title: Metadata23
    example:
      unit: EUR
    type: object
    properties:
      unit:
        description: ''
        example: EUR
        type: string
    required:
    - unit
  Import vouchers  to campaignrequest:
    title: Import vouchers - to campaignRequest
    example:
      code: CODE_1516274639
      redemption:
        quantity: 1
      metadata:
        unit: EUR
      additional_info: secret-code1
    type: object
    properties:
      code:
        description: ''
        example: CODE_1516274639
        type: string
      redemption:
        $ref: '#/definitions/Redemption22'
      metadata:
        $ref: '#/definitions/Metadata23'
      additional_info:
        description: ''
        example: secret-code1
        type: string
    required:
    - code
    - redemption
    - metadata
    - additional_info
  CreateRequest27:
    title: CreateRequest27
    example:
      name: Apple iPhone 7
      source_id: internal_crm_id_1516274639
      attributes:
      - color
      - memory
      metadata:
        test: true
    type: object
    properties:
      name:
        description: ''
        example: Apple iPhone 7
        type: string
      source_id:
        description: ''
        example: internal_crm_id_1516274639
        type: string
      attributes:
        description: ''
        example:
        - color
        - memory
        type: array
        items:
          type: string
      metadata:
        $ref: '#/definitions/Metadata'
    required:
    - name
    - source_id
    - attributes
    - metadata
  UpdateProductrequest:
    title: Update productRequest
    example:
      name: Apple iPhone 8
      metadata:
        test: false
    type: object
    properties:
      name:
        description: ''
        example: Apple iPhone 8
        type: string
      metadata:
        $ref: '#/definitions/Metadata30'
    required:
    - name
    - metadata
  Metadata30:
    title: Metadata30
    example:
      test: false
    type: object
    properties:
      test:
        description: ''
        example: false
        type: string
    required:
    - test
  AddSkurequest:
    title: Add SKURequest
    example:
      sku: APPLE_IPHONE_7
      source_id: internal_erp_sku_id_1516274639
      currency: USD
      price: 70000
      attributes:
        color: black
        memory: 32
    type: object
    properties:
      sku:
        description: ''
        example: APPLE_IPHONE_7
        type: string
      source_id:
        description: ''
        example: internal_erp_sku_id_1516274639
        type: string
      currency:
        description: ''
        example: USD
        type: string
      price:
        description: ''
        example: 70000
        type: integer
        format: int32
      attributes:
        $ref: '#/definitions/Attributes'
    required:
    - sku
    - source_id
    - currency
    - price
    - attributes
  Attributes:
    title: Attributes
    example:
      color: black
      memory: 32
    type: object
    properties:
      color:
        description: ''
        example: black
        type: string
      memory:
        description: ''
        example: 32
        type: string
    required:
    - color
    - memory
  UpdateSkurequest:
    title: Update SKURequest
    example:
      price: 50000
      attributes:
        memory: 16
    type: object
    properties:
      price:
        description: ''
        example: 50000
        type: integer
        format: int32
      attributes:
        $ref: '#/definitions/Attributes34'
    required:
    - price
    - attributes
  Attributes34:
    title: Attributes34
    example:
      memory: 16
    type: object
    properties:
      memory:
        description: ''
        example: 16
        type: integer
        format: int32
    required:
    - memory
  PublishRequest:
    title: PublishRequest
    example:
      campaign: 100k-test
      channel: MailChimp
    type: object
    properties:
      campaign:
        description: ''
        example: 100k-test
        type: string
      channel:
        description: ''
        example: MailChimp
        type: string
    required:
    - campaign
    - channel
  PublishBadRequestrequest:
    title: Publish bad requestRequest
    example:
      campaign: postman-paging
      channel: MailChimp
    type: object
    properties:
      campaign:
        description: ''
        example: postman-paging
        type: string
      channel:
        description: ''
        example: MailChimp
        type: string
    required:
    - campaign
    - channel
  Redeem  order detailsrequest:
    title: Redeem - order detailsRequest
    example:
      order:
        items:
        - sku_id: sku_dSbRQfbyUMyHnt
          quantity: 1
        - sku_id: sku_0KtP4rvwEECQ2U
          quantity: 1
    type: object
    properties:
      order:
        $ref: '#/definitions/Order'
    required:
    - order
  Order:
    title: Order
    example:
      items:
      - sku_id: sku_dSbRQfbyUMyHnt
        quantity: 1
      - sku_id: sku_0KtP4rvwEECQ2U
        quantity: 1
    type: object
    properties:
      items:
        description: ''
        example:
        - sku_id: sku_dSbRQfbyUMyHnt
          quantity: 1
        - sku_id: sku_0KtP4rvwEECQ2U
          quantity: 1
        type: array
        items:
          $ref: '#/definitions/Item'
    required:
    - items
  Item:
    title: Item
    example:
      sku_id: sku_dSbRQfbyUMyHnt
      quantity: 1
    type: object
    properties:
      sku_id:
        description: ''
        example: sku_dSbRQfbyUMyHnt
        type: string
      quantity:
        description: ''
        example: 1
        type: string
    required:
    - sku_id
    - quantity
  CreateSegmentrequest:
    title: Create segmentRequest
    example:
      name: test segment2
      customers:
      - cust_EkqCdCA7JyIDlFBvkOMTnceJ
      type: static
    type: object
    properties:
      name:
        description: ''
        example: test segment2
        type: string
      customers:
        description: ''
        example:
        - cust_EkqCdCA7JyIDlFBvkOMTnceJ
        type: array
        items:
          type: string
      type:
        description: ''
        example: static
        type: string
    required:
    - name
    - customers
    - type
  CreateVoucherWithoutCoderequest:
    title: Create voucher without codeRequest
    example:
      type: DISCOUNT_VOUCHER
      discount:
        percent_off: 10.0
        type: PERCENT
      redemption:
        quantity: 1
      category: postman
    type: object
    properties:
      type:
        description: ''
        example: DISCOUNT_VOUCHER
        type: string
      discount:
        $ref: '#/definitions/Discount'
      redemption:
        $ref: '#/definitions/Redemption43'
      category:
        description: ''
        example: postman
        type: string
    required:
    - type
    - discount
    - redemption
    - category
  Redemption43:
    title: Redemption43
    example:
      quantity: 1
    type: object
    properties:
      quantity:
        description: ''
        example: 1
        type: string
    required:
    - quantity
  CreateVoucherWithAGivenCoderequest:
    title: Create voucher with a given codeRequest
    example:
      type: DISCOUNT_VOUCHER
      discount:
        percent_off: 10.0
        type: PERCENT
      redemption:
        quantity: 1
      category: postman
    type: object
    properties:
      type:
        description: ''
        example: DISCOUNT_VOUCHER
        type: string
      discount:
        $ref: '#/definitions/Discount'
      redemption:
        $ref: '#/definitions/Redemption43'
      category:
        description: ''
        example: postman
        type: string
    required:
    - type
    - discount
    - redemption
    - category
  UpdateVoucherrequest:
    title: Update voucherRequest
    example:
      metadata:
        update_time: 1516274639
      category: postman
    type: object
    properties:
      metadata:
        $ref: '#/definitions/Metadata48'
      category:
        description: ''
        example: postman
        type: string
    required:
    - metadata
    - category
  Metadata48:
    title: Metadata48
    example:
      update_time: 1516274639
    type: object
    properties:
      update_time:
        description: ''
        example: 1516274639
        type: string
    required:
    - update_time
  Tc1  create voucher without coderequest:
    title: TC1 - Create voucher without codeRequest
    example:
      type: DISCOUNT_VOUCHER
      discount:
        percent_off: 10.0
        type: PERCENT
      redemption:
        quantity: 1
      category: postman
    type: object
    properties:
      type:
        description: ''
        example: DISCOUNT_VOUCHER
        type: string
      discount:
        $ref: '#/definitions/Discount'
      redemption:
        $ref: '#/definitions/Redemption43'
      category:
        description: ''
        example: postman
        type: string
    required:
    - type
    - discount
    - redemption
    - category
  Tc3  redeemrequest:
    title: TC3 - RedeemRequest
    example:
      customer:
        id: cust_eIH9UtbvIfRUP9nZyBqDeMEv
      order:
        items:
        - product_id: prod_anJ03RZZq74z4v
          quantity: 1
    type: object
    properties:
      customer:
        $ref: '#/definitions/Customer'
      order:
        $ref: '#/definitions/Order62'
    required:
    - customer
    - order
  Customer:
    title: Customer
    example:
      id: cust_eIH9UtbvIfRUP9nZyBqDeMEv
    type: object
    properties:
      id:
        description: ''
        example: cust_eIH9UtbvIfRUP9nZyBqDeMEv
        type: string
    required:
    - id
  Order62:
    title: Order62
    example:
      items:
      - product_id: prod_anJ03RZZq74z4v
        quantity: 1
    type: object
    properties:
      items:
        description: ''
        example:
        - product_id: prod_anJ03RZZq74z4v
          quantity: 1
        type: array
        items:
          $ref: '#/definitions/Item63'
    required:
    - items
  Item63:
    title: Item63
    example:
      product_id: prod_anJ03RZZq74z4v
      quantity: 1
    type: object
    properties:
      product_id:
        description: ''
        example: prod_anJ03RZZq74z4v
        type: string
      quantity:
        description: ''
        example: 1
        type: string
    required:
    - product_id
    - quantity
  Tc2  create voucher without coderequest:
    title: TC2 - Create voucher without codeRequest
    example:
      type: DISCOUNT_VOUCHER
      discount:
        percent_off: 10.0
        type: PERCENT
      redemption:
        quantity: 1
      category: postman-tc3
      code_config:
        pattern: TC4-PROMO-#######
    type: object
    properties:
      type:
        description: ''
        example: DISCOUNT_VOUCHER
        type: string
      discount:
        $ref: '#/definitions/Discount'
      redemption:
        $ref: '#/definitions/Redemption43'
      category:
        description: ''
        example: postman-tc3
        type: string
      code_config:
        $ref: '#/definitions/CodeConfig'
    required:
    - type
    - discount
    - redemption
    - category
    - code_config
  ValidateVoucherForGivenCustomerOrderrequest:
    title: Validate voucher for given customer orderRequest
    example:
      tracking_id: shop@myshop.com
      order:
        amount: 10000
        items: []
    type: object
    properties:
      tracking_id:
        description: ''
        example: shop@myshop.com
        type: string
      order:
        $ref: '#/definitions/Order69'
    required:
    - tracking_id
    - order
  Order69:
    title: Order69
    example:
      amount: 10000
      items: []
    type: object
    properties:
      amount:
        description: ''
        example: 10000
        type: integer
        format: int32
      items:
        description: ''
        example: []
        type: array
        items:
          type: string
    required:
    - amount
    - items
  RedeemRequest:
    title: RedeemRequest
    example:
      order:
        amount: 10000
        items: []
    type: object
    properties:
      order:
        $ref: '#/definitions/Order69'
    required:
    - order
  Tc2  redeem 2nd time after rollbackrequest:
    title: TC2 - Redeem 2nd time after rollbackRequest
    example:
      customer:
        id: '{{TC3-customer-id}}'
        name: Test Customer Postman
        email: test@myshop.com
      order:
        amount: 10000
        items: []
    type: object
    properties:
      customer:
        $ref: '#/definitions/Customer73'
      order:
        $ref: '#/definitions/Order69'
    required:
    - customer
    - order
  Customer73:
    title: Customer73
    example:
      id: '{{TC3-customer-id}}'
      name: Test Customer Postman
      email: test@myshop.com
    type: object
    properties:
      id:
        description: ''
        example: '{{TC3-customer-id}}'
        type: string
      name:
        description: ''
        example: Test Customer Postman
        type: string
      email:
        description: ''
        example: test@myshop.com
        type: string
    required:
    - id
    - name
    - email
  Tc4  publish voucher form autoUpdate campaignrequest:
    title: TC4 - Publish voucher form auto-update campaignRequest
    example:
      campaign: TEST-DEMO-1
      customer:
        source_id: test@myshop.pl
        name: Test Publish Customer
      metadata:
        test: true
        app: postman
    type: object
    properties:
      campaign:
        description: ''
        example: TEST-DEMO-1
        type: string
      customer:
        $ref: '#/definitions/Customer76'
      metadata:
        $ref: '#/definitions/Metadata77'
    required:
    - campaign
    - customer
    - metadata
  Customer76:
    title: Customer76
    example:
      source_id: test@myshop.pl
      name: Test Publish Customer
    type: object
    properties:
      source_id:
        description: ''
        example: test@myshop.pl
        type: string
      name:
        description: ''
        example: Test Publish Customer
        type: string
    required:
    - source_id
    - name
  Metadata77:
    title: Metadata77
    example:
      test: true
      app: postman
    type: object
    properties:
      test:
        description: ''
        example: true
        type: boolean
      app:
        description: ''
        example: postman
        type: string
    required:
    - test
    - app
  Tc5  redeemrequest:
    title: TC5 - RedeemRequest
    example:
      customer:
        source_id: test-postman@voucherify.io
        email: test-postman@voucherify.io
        name: Test Postman
        description: Test done from postman client
      order:
        amount: 10000
        items: []
    type: object
    properties:
      customer:
        $ref: '#/definitions/Customer83'
      order:
        $ref: '#/definitions/Order69'
    required:
    - customer
    - order
  Customer83:
    title: Customer83
    example:
      source_id: test-postman@voucherify.io
      email: test-postman@voucherify.io
      name: Test Postman
      description: Test done from postman client
    type: object
    properties:
      source_id:
        description: ''
        example: test-postman@voucherify.io
        type: string
      email:
        description: ''
        example: test-postman@voucherify.io
        type: string
      name:
        description: ''
        example: Test Postman
        type: string
      description:
        description: ''
        example: Test done from postman client
        type: string
    required:
    - source_id
    - email
    - name
    - description
  Tc6  create campaignrequest:
    title: TC6 - Create campaignRequest
    example:
      name: TC6 - test campaign
      start_date: 2016-09-26T00:00:00.0000000Z
      expiration_date: 2020-12-26T00:00:00.0000000Z
      type: AUTO_UPDATE
      vouchers_count: 10
      voucher:
        type: DISCOUNT_VOUCHER
        discount:
          percent_off: 10.0
          type: PERCENT
        redemption:
          quantity: 1
        code_config:
          pattern: TC6-PROMO-#######
      metadata:
        test: true
    type: object
    properties:
      name:
        description: ''
        example: TC6 - test campaign
        type: string
      start_date:
        description: ''
        example: 9/26/2016 12:00:00 AM
        type: string
      expiration_date:
        description: ''
        example: 12/26/2020 12:00:00 AM
        type: string
      type:
        description: ''
        example: AUTO_UPDATE
        type: string
      vouchers_count:
        description: ''
        example: 10
        type: integer
        format: int32
      voucher:
        $ref: '#/definitions/Voucher'
      metadata:
        $ref: '#/definitions/Metadata'
    required:
    - name
    - start_date
    - expiration_date
    - type
    - vouchers_count
    - voucher
    - metadata
  Tc6  create productrequest:
    title: TC6 - Create ProductRequest
    example:
      name: Apple iPhone 7
      source_id: internal_crm_id_1516274639
      attributes:
      - color
      - memory
      metadata:
        test: true
    type: object
    properties:
      name:
        description: ''
        example: Apple iPhone 7
        type: string
      source_id:
        description: ''
        example: internal_crm_id_1516274639
        type: string
      attributes:
        description: ''
        example:
        - color
        - memory
        type: array
        items:
          type: string
      metadata:
        $ref: '#/definitions/Metadata'
    required:
    - name
    - source_id
    - attributes
    - metadata
  Tc6  add skurequest:
    title: TC6 - Add SKURequest
    example:
      sku: APPLE_IPHONE_7
      source_id: internal_erp_sku_id_1516274639
      currency: USD
      price: 70000
      attributes:
        color: black
        memory: 32
    type: object
    properties:
      sku:
        description: ''
        example: APPLE_IPHONE_7
        type: string
      source_id:
        description: ''
        example: internal_erp_sku_id_1516274639
        type: string
      currency:
        description: ''
        example: USD
        type: string
      price:
        description: ''
        example: 70000
        type: integer
        format: int32
      attributes:
        $ref: '#/definitions/Attributes'
    required:
    - sku
    - source_id
    - currency
    - price
    - attributes
  Tc6  create validation rulesrequest:
    title: TC6 - Create Validation RulesRequest
    example:
      campaign_name: '{{createdCampaignName}}'
      junction: AND
      skus:
        junction: AND
        conditions:
          $is:
          - id: '{{createdSKUId}}'
      orders:
        junction: AND
        total_amount: 
        products_count:
          $more_than:
          - 1
    type: object
    properties:
      campaign_name:
        description: ''
        example: '{{createdCampaignName}}'
        type: string
      junction:
        description: ''
        example: AND
        type: string
      skus:
        $ref: '#/definitions/Skus'
      orders:
        $ref: '#/definitions/Orders'
    required:
    - campaign_name
    - junction
    - skus
    - orders
  Skus:
    title: Skus
    example:
      junction: AND
      conditions:
        $is:
        - id: '{{createdSKUId}}'
    type: object
    properties:
      junction:
        description: ''
        example: AND
        type: string
      conditions:
        $ref: '#/definitions/Conditions100'
    required:
    - junction
    - conditions
  Conditions100:
    title: Conditions100
    example:
      $is:
      - id: '{{createdSKUId}}'
    type: object
    properties:
      $is:
        description: ''
        example:
        - id: '{{createdSKUId}}'
        type: array
        items:
          $ref: '#/definitions/I'
    required:
    - $is
  I:
    title: I
    example:
      id: '{{createdSKUId}}'
    type: object
    properties:
      id:
        description: ''
        example: '{{createdSKUId}}'
        type: string
    required:
    - id
  Orders:
    title: Orders
    example:
      junction: AND
      total_amount: 
      products_count:
        $more_than:
        - 1
    type: object
    properties:
      junction:
        description: ''
        example: AND
        type: string
      total_amount:
        description: ''
      products_count:
        $ref: '#/definitions/ProductsCount'
    required:
    - junction
    - total_amount
    - products_count
  ProductsCount:
    title: ProductsCount
    example:
      $more_than:
      - 1
    type: object
    properties:
      $more_than:
        description: ''
        example:
        - 1
        type: array
        items:
          type: integer
          format: int32
    required:
    - $more_than
  Tc6  add voucher to campaignrequest:
    title: TC6 - Add voucher to campaignRequest
    example:
      metadata:
        test: true
    type: object
    properties:
      metadata:
        $ref: '#/definitions/Metadata'
    required:
    - metadata
  ValidateRequest:
    title: ValidateRequest
    example:
      order:
        amount: 1000
    type: object
    properties:
      order:
        $ref: '#/definitions/Order107'
    required:
    - order
  Order107:
    title: Order107
    example:
      amount: 1000
    type: object
    properties:
      amount:
        description: ''
        example: 1000
        type: integer
        format: int32
    required:
    - amount
  Validate  order detailsrequest:
    title: Validate - order detailsRequest
    example:
      customer:
        id: cust_eIH9UtbvIfRUP9nZyBqDeMEv
      order:
        items:
        - product_id: prod_anJ03RZZq74z4v
          quantity: 1
    type: object
    properties:
      customer:
        $ref: '#/definitions/Customer'
      order:
        $ref: '#/definitions/Order62'
    required:
    - customer
    - order
  Validate  order details skusrequest:
    title: Validate - order details skusRequest
    example:
      order:
        items:
        - sku_id: sku_dSbRQfbyUMyHnt
          quantity: 1
        - sku_id: sku_0KtP4rvwEECQ2U
          quantity: 1
    type: object
    properties:
      order:
        $ref: '#/definitions/Order'
    required:
    - order
  CreateRequest115:
    title: CreateRequest115
    example:
      voucher_code: val_rul_test
      orders:
        total_amount:
          $more_than:
          - 10000
    type: object
    properties:
      voucher_code:
        description: ''
        example: val_rul_test
        type: string
      orders:
        $ref: '#/definitions/Orders116'
    required:
    - voucher_code
    - orders
  Orders116:
    title: Orders116
    example:
      total_amount:
        $more_than:
        - 10000
    type: object
    properties:
      total_amount:
        $ref: '#/definitions/TotalAmount'
    required:
    - total_amount
  TotalAmount:
    title: TotalAmount
    example:
      $more_than:
      - 10000
    type: object
    properties:
      $more_than:
        description: ''
        example:
        - 10000
        type: array
        items:
          type: integer
          format: int32
    required:
    - $more_than
  UpdateRequest118:
    title: UpdateRequest118
    example:
      orders:
        total_amount:
          $more_than:
          - 5000
    type: object
    properties:
      orders:
        $ref: '#/definitions/Orders116'
    required:
    - orders
